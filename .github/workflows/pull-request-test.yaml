name: Pull Request Checker

on:
  pull_request:
    types: [edited, synchronize, opened, reopened]

jobs:
  pull-request-checker:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            
            const ORG = context.payload.organization.login;
            const REPO = context.payload.repository.name;
            const REPO_BASE_API_URL = `https://api.github.com/repos/${ORG}/${REPO}`;
            const ISSUE_LINK_REGEX = /\b(?:close[sd]?|fix(?:es|ed)?|resolve[sd]?)\b #[0-9]+ /gi;
                        
            core.info('Checking for issue links in Pull Request description');
            let matches = context.payload.pull_request.body.match(ISSUE_LINK_REGEX);
            if(!matches){
              core.setFailed('No Issue Links found');
              generateCommentOnFail('no_link');
              return;
            } else {
              core.info('   --- Issue Links found');
              commentMarkdown += '* Check for existence of issue link(s) - :white_check_mark:\n';
            }

            core.info('Checking that any found issue links reference the same issue number');
            let linkedIssueNumber;
            matches = matches.map(item => item.replace(/\D/g, '')); //extracting issue numbers
            if(!matches.every((match, index, arr) =>  match === arr[0])){
              core.setFailed('Multiple links referencing different issues');
              generateCommentOnFail('links_reference_multiple_issues');
              return;
            } else {
              linkedIssueNumber = matches[0];
              core.info(`   --- All issue numbers match with issue #${linkedIssueNumber}`);
              summaryMarkdown += '* Check that issue links all reference the same issue - :white_check_mark:\n';
            }

            core.info('Checking that referenced issue number exists as a valid issue');
            //retrieving all existing issues using gh api
            const response = await fetch(`${REPO_BASE_API_URL}/issues`);
            const issues = await response.json();
            const validIssue = issues.find(issue => issue.number == linkedIssueNumber);
            if(!validIssue){
              core.setFailed(`Referenced issue number #${linkedIssueNumber} is not found in list of issues`);
              generateCommentOnFail('issue_doesnt_exist');
              return;
            } else {
              core.info(`   --- Referenced issue number #${linkedIssueNumber} found in list of issues`);
              summaryMarkdown += '* Check that referenced issue number exists as a valid issue - :white_check_mark:\n';
            }
            
            core.info('Checking that the referenced issue number has been assigned to the Pull Request creator');            
            if(validIssue.assignees.find(assignee => assignee.login === context.payload.sender.login)){
              core.info(`   --- Pull Request submitter '${context.payload.sender.login}' is confirmed assigned to issue #${linkedIssueNumber}`);
              summaryMarkdown += '* Check that referenced issue number has been assigned to the Pull Request creator - :white_check_mark:\n';
            } else {
              core.setFailed(`Pull Request submitter '${context.payload.sender.login}' is currently not assigned to issue #${linkedIssueNumber}`);
              errorMarkdown
              generateCommentOnFail('not_assignee');
              return;
            }
            
            ///////////////////////////////// HELPER FUNCTIONS ///////////////////////////////////////
            
            function generateCommentOnFail(reason, additionalInfo){
              let markdown = '###There was a problem with your Pull Request submission';
              
              switch(reason){
                case 'no_link':
                  markdown = `${markdown}
                              ###:x: No issue link found in Pull Request description
                              The activity instructions required you to reference the issue for which you were submitting this pull request. 
                              (Examples: Closes #15 or Fixes #10)
                              Modify the above description of this Pull Request and add the required issue link.`
                  break;
              }
              
              //generate comment with provided markdown
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: markdown
              })
            }
